name: build-spark
description: builds spark master and worker images
inputs:
  SCALA_VERSION:
    description: 'Scala version to built images with'
    required: true
  SPARK_VERSION:
    description: 'Spark version to built images with'
    required: true
  HADOOP_VERSION:
    description: 'Hadoop version to built images with'
    required: true
  DOCKERHUB_USR:
    description: 'Docker Hub user to push images with'
    required: true
  DOCKERHUB_PWD:
    description: 'Docker Hub password to push images with'
    required: true
  IS_LATEST:
    description: 'Indicate whether the images is latest'
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    - name: Build Base Image
      shell: bash
      run: |
        cd ${GITHUB_WORKSPACE}/build
        docker build \
          --build-arg build_date="$(date -u +'%Y-%m-%d')" \
          --build-arg scala_version="${{ inputs.SCALA_VERSION }}" \
          -f docker/base/Dockerfile \
          -t base:latest .
    - name: Build Spark Base Image
      shell: bash
      run: |
        cd ${GITHUB_WORKSPACE}/build
        docker build \
          --build-arg build_date="$(date -u +'%Y-%m-%d')" \
          --build-arg spark_version="${{ inputs.SPARK_VERSION }}" \
          --build-arg hadoop_version="${{ inputs.HADOOP_VERSION }}" \
          -f docker/spark-base/Dockerfile \
          -t spark-base:${{ inputs.SPARK_VERSION }} .
    - name: Build & Push Spark Master Image
      shell: bash
      run: |
        cd ${GITHUB_WORKSPACE}/build
        docker build \
          --build-arg build_date="$(date -u +'%Y-%m-%d')" \
          --build-arg spark_version="${{ inputs.SPARK_VERSION }}" \
          -f docker/spark-master/Dockerfile \
          -t spark-master:${{ inputs.SPARK_VERSION }} .
        docker tag spark-master:${{ inputs.SPARK_VERSION }} ${{ inputs.DOCKERHUB_USR }}/spark-master:${{ inputs.SPARK_VERSION }}
        docker tag spark-master:${{ inputs.SPARK_VERSION }} ${{ inputs.DOCKERHUB_USR }}/spark-master:latest
        echo ${{ inputs.DOCKERHUB_PWD }} | docker login -u ${{ inputs.DOCKERHUB_USR }} --password-stdin
        if [ "${GITHUB_REF}" == "refs/heads/master" ]; then docker push ${{ inputs.DOCKERHUB_USR }}/spark-master:${{ inputs.SPARK_VERSION }}; fi
        if [ "${GITHUB_REF}" == "refs/heads/master" ] && [ "${{ inputs.IS_LATEST }}" == "true" ]; then docker push ${{ inputs.DOCKERHUB_USR }}/spark-master:latest; fi
    - name: Build & Push Spark Worker Image
      shell: bash
      run: |
        cd ${GITHUB_WORKSPACE}/build
        docker build \
          --build-arg build_date="$(date -u +'%Y-%m-%d')" \
          --build-arg spark_version="${{ inputs.SPARK_VERSION }}" \
          -f docker/spark-worker/Dockerfile \
          -t spark-worker:${{ inputs.SPARK_VERSION }} .
        docker tag spark-worker:${{ inputs.SPARK_VERSION }} ${{ inputs.DOCKERHUB_USR }}/spark-worker:${{ inputs.SPARK_VERSION }}
        docker tag spark-worker:${{ inputs.SPARK_VERSION }} ${{ inputs.DOCKERHUB_USR }}/spark-worker:latest
        echo ${{ inputs.DOCKERHUB_PWD }} | docker login -u ${{ inputs.DOCKERHUB_USR }} --password-stdin
        if [ "${GITHUB_REF}" == "refs/heads/master" ]; then docker push ${{ inputs.DOCKERHUB_USR }}/spark-worker:${{ inputs.SPARK_VERSION }}; fi
        if [ "${GITHUB_REF}" == "refs/heads/master" ] && [ "${{ inputs.IS_LATEST }}" == "true" ]; then docker push ${{ inputs.DOCKERHUB_USR }}/spark-worker:latest; fi